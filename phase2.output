Nonterminals useless in grammar

    comma_sep_expressions


Terminals unused in grammar

    MAIN


State 17 conflicts: 2 shift/reduce
State 84 conflicts: 1 reduce/reduce
State 86 conflicts: 1 reduce/reduce
State 148 conflicts: 1 reduce/reduce
State 150 conflicts: 1 reduce/reduce
State 168 conflicts: 1 reduce/reduce
State 169 conflicts: 1 reduce/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: function_ident SEMICOLON paramlocal declarations paramlocal paramlocal declarations paramlocal paramlocal statements end_body

    5 end_body: END_BODY

    6 paramlocal: BEGIN_PARAMS
    7           | END_PARAMS
    8           | BEGIN_LOCALS
    9           | END_LOCALS
   10           | BEGIN_BODY

   11 function_ident: FUNCTION ident

   12 ident: IDENT

   13 declarations: %empty
   14             | declaration SEMICOLON declarations

   15 declaration: idents COLON INTEGER
   16            | IDENT COLON INTEGER
   17            | IDENT COMMA IDENT COLON INTEGER
   18            | IDENT COMMA IDENT COMMA IDENT COLON INTEGER
   19            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   20            | IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   21            | IDENT COMMA IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   22 idents: ident
   23       | ident COMMA idents

   24 statement: var ASSIGN expression
   25          | IF bool_exp THEN statements ENDIF
   26          | IF bool_exp THEN statements ELSE statements ENDIF
   27          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   28          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   29          | READ var
   30          | READ var COMMA var
   31          | READ var COMMA var COMMA var
   32          | WRITE var
   33          | WRITE var COMMA var
   34          | WRITE var COMMA var COMMA var
   35          | READ vars
   36          | WRITE vars
   37          | CONTINUE
   38          | RETURN expression

   39 statements: statement SEMICOLON
   40           | statement SEMICOLON statements

   41 expression: multiplicative_expression
   42           | multiplicative_expression ADD expression
   43           | multiplicative_expression SUB expression

   44 multiplicative_expression: term
   45                          | term MULT multiplicative_expression
   46                          | term DIV multiplicative_expression
   47                          | term MOD multiplicative_expression

   48 term: var
   49     | SUB var
   50     | NUMBER
   51     | SUB NUMBER
   52     | L_PAREN expression R_PAREN
   53     | SUB L_PAREN expression R_PAREN
   54     | ident L_PAREN expressions R_PAREN

   55 expressions: %empty
   56            | expression
   57            | expressions COMMA expression

   58 bool_exp: relation_and_exp
   59         | bool_exp OR relation_and_exp

   60 relation_and_exp: relation_exp
   61                 | relation_and_exp AND relation_exp

   62 relation_exp: expression comp expression
   63             | NOT expression comp expression
   64             | TRUE
   65             | NOT TRUE
   66             | FALSE
   67             | NOT FALSE
   68             | L_PAREN bool_exp R_PAREN
   69             | NOT L_PAREN bool_exp R_PAREN

   70 comp: EQ
   71     | NEQ
   72     | LT
   73     | GT
   74     | LTE
   75     | GTE

   76 var: ident
   77    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   78 vars: var
   79     | var COMMA vars


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BEGIN_PARAMS (258) 6
    END_PARAMS (259) 7
    BEGIN_LOCALS (260) 8
    END_LOCALS (261) 9
    BEGIN_BODY (262) 10
    END_BODY (263) 5
    FUNCTION (264) 11
    MAIN (265)
    RETURN (266) 38
    L_SQUARE_BRACKET (267) 19 20 21 77
    R_SQUARE_BRACKET (268) 19 20 21 77
    INTEGER (269) 15 16 17 18 19 20 21
    ARRAY (270) 19 20 21
    OF (271) 19 20 21
    IF (272) 25 26
    THEN (273) 25 26
    ENDIF (274) 25 26
    ELSE (275) 26
    WHILE (276) 27 28
    DO (277) 28
    BEGINLOOP (278) 27 28
    ENDLOOP (279) 27 28
    CONTINUE (280) 37
    READ (281) 29 30 31 35
    WRITE (282) 32 33 34 36
    AND (283) 61
    OR (284) 59
    NOT (285) 63 65 67 69
    TRUE (286) 64 65
    FALSE (287) 66 67
    SUB (288) 43 49 51 53
    ADD (289) 42
    MULT (290) 45
    DIV (291) 46
    MOD (292) 47
    EQ (293) 70
    NEQ (294) 71
    LT (295) 72
    GT (296) 73
    LTE (297) 74
    GTE (298) 75
    SEMICOLON (299) 4 14 39 40
    COLON (300) 15 16 17 18 19 20 21
    COMMA (301) 17 18 20 21 23 30 31 33 34 57 79
    L_PAREN (302) 52 53 54 68 69
    R_PAREN (303) 52 53 54 68 69
    ASSIGN (304) 24
    NUMBER <leaf> (305) 19 20 21 50 51
    IDENT <leaf> (306) 12 16 17 18 19 20 21


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    prog_start (53)
        on left: 1
        on right: 0
    functions <root> (54)
        on left: 2 3
        on right: 1 2
    function <root> (55)
        on left: 4
        on right: 2
    end_body <node> (56)
        on left: 5
        on right: 4
    paramlocal <node> (57)
        on left: 6 7 8 9 10
        on right: 4
    function_ident <root> (58)
        on left: 11
        on right: 4
    ident <node> (59)
        on left: 12
        on right: 11 22 23 54 76 77
    declarations <node> (60)
        on left: 13 14
        on right: 4 14
    declaration <node> (61)
        on left: 15 16 17 18 19 20 21
        on right: 14
    idents <node> (62)
        on left: 22 23
        on right: 15 23
    statement <node> (63)
        on left: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
        on right: 39 40
    statements <node> (64)
        on left: 39 40
        on right: 4 25 26 27 28 40
    expression <node> (65)
        on left: 41 42 43
        on right: 24 38 42 43 52 53 56 57 62 63 77
    multiplicative_expression <node> (66)
        on left: 44 45 46 47
        on right: 41 42 43 45 46 47
    term <node> (67)
        on left: 48 49 50 51 52 53 54
        on right: 44 45 46 47
    expressions <node> (68)
        on left: 55 56 57
        on right: 54 57
    bool_exp <node> (69)
        on left: 58 59
        on right: 25 26 27 28 59 68 69
    relation_and_exp <node> (70)
        on left: 60 61
        on right: 58 59 61
    relation_exp <node> (71)
        on left: 62 63 64 65 66 67 68 69
        on right: 60 61
    comp <leaf> (72)
        on left: 70 71 72 73 74 75
        on right: 62 63
    var <node> (73)
        on left: 76 77
        on right: 24 29 30 31 32 33 34 48 49 78 79
    vars <node> (74)
        on left: 78 79
        on right: 35 36 79


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start      go to state 2
    functions       go to state 3
    function        go to state 4
    function_ident  go to state 5


State 1

   11 function_ident: FUNCTION . ident

    IDENT  shift, and go to state 6

    ident  go to state 7


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 8


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions       go to state 9
    function        go to state 4
    function_ident  go to state 5


State 5

    4 function: function_ident . SEMICOLON paramlocal declarations paramlocal paramlocal declarations paramlocal paramlocal statements end_body

    SEMICOLON  shift, and go to state 10


State 6

   12 ident: IDENT .

    $default  reduce using rule 12 (ident)


State 7

   11 function_ident: FUNCTION ident .

    $default  reduce using rule 11 (function_ident)


State 8

    0 $accept: prog_start $end .

    $default  accept


State 9

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 10

    4 function: function_ident SEMICOLON . paramlocal declarations paramlocal paramlocal declarations paramlocal paramlocal statements end_body

    BEGIN_PARAMS  shift, and go to state 11
    END_PARAMS    shift, and go to state 12
    BEGIN_LOCALS  shift, and go to state 13
    END_LOCALS    shift, and go to state 14
    BEGIN_BODY    shift, and go to state 15

    paramlocal  go to state 16


State 11

    6 paramlocal: BEGIN_PARAMS .

    $default  reduce using rule 6 (paramlocal)


State 12

    7 paramlocal: END_PARAMS .

    $default  reduce using rule 7 (paramlocal)


State 13

    8 paramlocal: BEGIN_LOCALS .

    $default  reduce using rule 8 (paramlocal)


State 14

    9 paramlocal: END_LOCALS .

    $default  reduce using rule 9 (paramlocal)


State 15

   10 paramlocal: BEGIN_BODY .

    $default  reduce using rule 10 (paramlocal)


State 16

    4 function: function_ident SEMICOLON paramlocal . declarations paramlocal paramlocal declarations paramlocal paramlocal statements end_body

    IDENT  shift, and go to state 17

    $default  reduce using rule 13 (declarations)

    ident         go to state 18
    declarations  go to state 19
    declaration   go to state 20
    idents        go to state 21


State 17

   12 ident: IDENT .
   16 declaration: IDENT . COLON INTEGER
   17            | IDENT . COMMA IDENT COLON INTEGER
   18            | IDENT . COMMA IDENT COMMA IDENT COLON INTEGER
   19            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   20            | IDENT . COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   21            | IDENT . COMMA IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 22
    COMMA  shift, and go to state 23

    COLON  [reduce using rule 12 (ident)]
    COMMA  [reduce using rule 12 (ident)]


State 18

   22 idents: ident .
   23       | ident . COMMA idents

    COMMA  shift, and go to state 24

    $default  reduce using rule 22 (idents)


State 19

    4 function: function_ident SEMICOLON paramlocal declarations . paramlocal paramlocal declarations paramlocal paramlocal statements end_body

    BEGIN_PARAMS  shift, and go to state 11
    END_PARAMS    shift, and go to state 12
    BEGIN_LOCALS  shift, and go to state 13
    END_LOCALS    shift, and go to state 14
    BEGIN_BODY    shift, and go to state 15

    paramlocal  go to state 25


State 20

   14 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 26


State 21

   15 declaration: idents . COLON INTEGER

    COLON  shift, and go to state 27


State 22

   16 declaration: IDENT COLON . INTEGER
   19            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 28
    ARRAY    shift, and go to state 29


State 23

   17 declaration: IDENT COMMA . IDENT COLON INTEGER
   18            | IDENT COMMA . IDENT COMMA IDENT COLON INTEGER
   20            | IDENT COMMA . IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   21            | IDENT COMMA . IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    IDENT  shift, and go to state 30


State 24

   23 idents: ident COMMA . idents

    IDENT  shift, and go to state 6

    ident   go to state 18
    idents  go to state 31


State 25

    4 function: function_ident SEMICOLON paramlocal declarations paramlocal . paramlocal declarations paramlocal paramlocal statements end_body

    BEGIN_PARAMS  shift, and go to state 11
    END_PARAMS    shift, and go to state 12
    BEGIN_LOCALS  shift, and go to state 13
    END_LOCALS    shift, and go to state 14
    BEGIN_BODY    shift, and go to state 15

    paramlocal  go to state 32


State 26

   14 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 17

    $default  reduce using rule 13 (declarations)

    ident         go to state 18
    declarations  go to state 33
    declaration   go to state 20
    idents        go to state 21


State 27

   15 declaration: idents COLON . INTEGER

    INTEGER  shift, and go to state 34


State 28

   16 declaration: IDENT COLON INTEGER .

    $default  reduce using rule 16 (declaration)


State 29

   19 declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 35


State 30

   17 declaration: IDENT COMMA IDENT . COLON INTEGER
   18            | IDENT COMMA IDENT . COMMA IDENT COLON INTEGER
   20            | IDENT COMMA IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   21            | IDENT COMMA IDENT . COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 36
    COMMA  shift, and go to state 37


State 31

   23 idents: ident COMMA idents .

    $default  reduce using rule 23 (idents)


State 32

    4 function: function_ident SEMICOLON paramlocal declarations paramlocal paramlocal . declarations paramlocal paramlocal statements end_body

    IDENT  shift, and go to state 17

    $default  reduce using rule 13 (declarations)

    ident         go to state 18
    declarations  go to state 38
    declaration   go to state 20
    idents        go to state 21


State 33

   14 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 14 (declarations)


State 34

   15 declaration: idents COLON INTEGER .

    $default  reduce using rule 15 (declaration)


State 35

   19 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 39


State 36

   17 declaration: IDENT COMMA IDENT COLON . INTEGER
   20            | IDENT COMMA IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 40
    ARRAY    shift, and go to state 41


State 37

   18 declaration: IDENT COMMA IDENT COMMA . IDENT COLON INTEGER
   21            | IDENT COMMA IDENT COMMA . IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    IDENT  shift, and go to state 42


State 38

    4 function: function_ident SEMICOLON paramlocal declarations paramlocal paramlocal declarations . paramlocal paramlocal statements end_body

    BEGIN_PARAMS  shift, and go to state 11
    END_PARAMS    shift, and go to state 12
    BEGIN_LOCALS  shift, and go to state 13
    END_LOCALS    shift, and go to state 14
    BEGIN_BODY    shift, and go to state 15

    paramlocal  go to state 43


State 39

   19 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 44


State 40

   17 declaration: IDENT COMMA IDENT COLON INTEGER .

    $default  reduce using rule 17 (declaration)


State 41

   20 declaration: IDENT COMMA IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 45


State 42

   18 declaration: IDENT COMMA IDENT COMMA IDENT . COLON INTEGER
   21            | IDENT COMMA IDENT COMMA IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 46


State 43

    4 function: function_ident SEMICOLON paramlocal declarations paramlocal paramlocal declarations paramlocal . paramlocal statements end_body

    BEGIN_PARAMS  shift, and go to state 11
    END_PARAMS    shift, and go to state 12
    BEGIN_LOCALS  shift, and go to state 13
    END_LOCALS    shift, and go to state 14
    BEGIN_BODY    shift, and go to state 15

    paramlocal  go to state 47


State 44

   19 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 48


State 45

   20 declaration: IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 49


State 46

   18 declaration: IDENT COMMA IDENT COMMA IDENT COLON . INTEGER
   21            | IDENT COMMA IDENT COMMA IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 50
    ARRAY    shift, and go to state 51


State 47

    4 function: function_ident SEMICOLON paramlocal declarations paramlocal paramlocal declarations paramlocal paramlocal . statements end_body

    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    IDENT     shift, and go to state 6

    ident       go to state 59
    statement   go to state 60
    statements  go to state 61
    var         go to state 62


State 48

   19 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 63


State 49

   20 declaration: IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 64


State 50

   18 declaration: IDENT COMMA IDENT COMMA IDENT COLON INTEGER .

    $default  reduce using rule 18 (declaration)


State 51

   21 declaration: IDENT COMMA IDENT COMMA IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 65


State 52

   38 statement: RETURN . expression

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 70
    multiplicative_expression  go to state 71
    term                       go to state 72
    var                        go to state 73


State 53

   25 statement: IF . bool_exp THEN statements ENDIF
   26          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 74
    TRUE     shift, and go to state 75
    FALSE    shift, and go to state 76
    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 77
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 78
    multiplicative_expression  go to state 71
    term                       go to state 72
    bool_exp                   go to state 79
    relation_and_exp           go to state 80
    relation_exp               go to state 81
    var                        go to state 73


State 54

   27 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 74
    TRUE     shift, and go to state 75
    FALSE    shift, and go to state 76
    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 77
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 78
    multiplicative_expression  go to state 71
    term                       go to state 72
    bool_exp                   go to state 82
    relation_and_exp           go to state 80
    relation_exp               go to state 81
    var                        go to state 73


State 55

   28 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 83


State 56

   37 statement: CONTINUE .

    $default  reduce using rule 37 (statement)


State 57

   29 statement: READ . var
   30          | READ . var COMMA var
   31          | READ . var COMMA var COMMA var
   35          | READ . vars

    IDENT  shift, and go to state 6

    ident  go to state 59
    var    go to state 84
    vars   go to state 85


State 58

   32 statement: WRITE . var
   33          | WRITE . var COMMA var
   34          | WRITE . var COMMA var COMMA var
   36          | WRITE . vars

    IDENT  shift, and go to state 6

    ident  go to state 59
    var    go to state 86
    vars   go to state 87


State 59

   76 var: ident .
   77    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 88

    $default  reduce using rule 76 (var)


State 60

   39 statements: statement . SEMICOLON
   40           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 89


State 61

    4 function: function_ident SEMICOLON paramlocal declarations paramlocal paramlocal declarations paramlocal paramlocal statements . end_body

    END_BODY  shift, and go to state 90

    end_body  go to state 91


State 62

   24 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 92


State 63

   19 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 19 (declaration)


State 64

   20 declaration: IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 93


State 65

   21 declaration: IDENT COMMA IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 94


State 66

   49 term: SUB . var
   51     | SUB . NUMBER
   53     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 95
    NUMBER   shift, and go to state 96
    IDENT    shift, and go to state 6

    ident  go to state 59
    var    go to state 97


State 67

   52 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 98
    multiplicative_expression  go to state 71
    term                       go to state 72
    var                        go to state 73


State 68

   50 term: NUMBER .

    $default  reduce using rule 50 (term)


State 69

   54 term: ident . L_PAREN expressions R_PAREN
   76 var: ident .
   77    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 88
    L_PAREN           shift, and go to state 99

    $default  reduce using rule 76 (var)


State 70

   38 statement: RETURN expression .

    $default  reduce using rule 38 (statement)


State 71

   41 expression: multiplicative_expression .
   42           | multiplicative_expression . ADD expression
   43           | multiplicative_expression . SUB expression

    SUB  shift, and go to state 100
    ADD  shift, and go to state 101

    $default  reduce using rule 41 (expression)


State 72

   44 multiplicative_expression: term .
   45                          | term . MULT multiplicative_expression
   46                          | term . DIV multiplicative_expression
   47                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 102
    DIV   shift, and go to state 103
    MOD   shift, and go to state 104

    $default  reduce using rule 44 (multiplicative_expression)


State 73

   48 term: var .

    $default  reduce using rule 48 (term)


State 74

   63 relation_exp: NOT . expression comp expression
   65             | NOT . TRUE
   67             | NOT . FALSE
   69             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 105
    FALSE    shift, and go to state 106
    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 107
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 108
    multiplicative_expression  go to state 71
    term                       go to state 72
    var                        go to state 73


State 75

   64 relation_exp: TRUE .

    $default  reduce using rule 64 (relation_exp)


State 76

   66 relation_exp: FALSE .

    $default  reduce using rule 66 (relation_exp)


State 77

   52 term: L_PAREN . expression R_PAREN
   68 relation_exp: L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 74
    TRUE     shift, and go to state 75
    FALSE    shift, and go to state 76
    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 77
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 109
    multiplicative_expression  go to state 71
    term                       go to state 72
    bool_exp                   go to state 110
    relation_and_exp           go to state 80
    relation_exp               go to state 81
    var                        go to state 73


State 78

   62 relation_exp: expression . comp expression

    EQ   shift, and go to state 111
    NEQ  shift, and go to state 112
    LT   shift, and go to state 113
    GT   shift, and go to state 114
    LTE  shift, and go to state 115
    GTE  shift, and go to state 116

    comp  go to state 117


State 79

   25 statement: IF bool_exp . THEN statements ENDIF
   26          | IF bool_exp . THEN statements ELSE statements ENDIF
   59 bool_exp: bool_exp . OR relation_and_exp

    THEN  shift, and go to state 118
    OR    shift, and go to state 119


State 80

   58 bool_exp: relation_and_exp .
   61 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 120

    $default  reduce using rule 58 (bool_exp)


State 81

   60 relation_and_exp: relation_exp .

    $default  reduce using rule 60 (relation_and_exp)


State 82

   27 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP
   59 bool_exp: bool_exp . OR relation_and_exp

    BEGINLOOP  shift, and go to state 121
    OR         shift, and go to state 119


State 83

   28 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    IDENT     shift, and go to state 6

    ident       go to state 59
    statement   go to state 60
    statements  go to state 122
    var         go to state 62


State 84

   29 statement: READ var .
   30          | READ var . COMMA var
   31          | READ var . COMMA var COMMA var
   78 vars: var .
   79     | var . COMMA vars

    COMMA  shift, and go to state 123

    SEMICOLON  reduce using rule 29 (statement)
    SEMICOLON  [reduce using rule 78 (vars)]
    $default   reduce using rule 29 (statement)


State 85

   35 statement: READ vars .

    $default  reduce using rule 35 (statement)


State 86

   32 statement: WRITE var .
   33          | WRITE var . COMMA var
   34          | WRITE var . COMMA var COMMA var
   78 vars: var .
   79     | var . COMMA vars

    COMMA  shift, and go to state 124

    SEMICOLON  reduce using rule 32 (statement)
    SEMICOLON  [reduce using rule 78 (vars)]
    $default   reduce using rule 32 (statement)


State 87

   36 statement: WRITE vars .

    $default  reduce using rule 36 (statement)


State 88

   77 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 125
    multiplicative_expression  go to state 71
    term                       go to state 72
    var                        go to state 73


State 89

   39 statements: statement SEMICOLON .
   40           | statement SEMICOLON . statements

    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    IDENT     shift, and go to state 6

    $default  reduce using rule 39 (statements)

    ident       go to state 59
    statement   go to state 60
    statements  go to state 126
    var         go to state 62


State 90

    5 end_body: END_BODY .

    $default  reduce using rule 5 (end_body)


State 91

    4 function: function_ident SEMICOLON paramlocal declarations paramlocal paramlocal declarations paramlocal paramlocal statements end_body .

    $default  reduce using rule 4 (function)


State 92

   24 statement: var ASSIGN . expression

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 127
    multiplicative_expression  go to state 71
    term                       go to state 72
    var                        go to state 73


State 93

   20 declaration: IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 128


State 94

   21 declaration: IDENT COMMA IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 129


State 95

   53 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 130
    multiplicative_expression  go to state 71
    term                       go to state 72
    var                        go to state 73


State 96

   51 term: SUB NUMBER .

    $default  reduce using rule 51 (term)


State 97

   49 term: SUB var .

    $default  reduce using rule 49 (term)


State 98

   52 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 131


State 99

   54 term: ident L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    $default  reduce using rule 55 (expressions)

    ident                      go to state 69
    expression                 go to state 132
    multiplicative_expression  go to state 71
    term                       go to state 72
    expressions                go to state 133
    var                        go to state 73


State 100

   43 expression: multiplicative_expression SUB . expression

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 134
    multiplicative_expression  go to state 71
    term                       go to state 72
    var                        go to state 73


State 101

   42 expression: multiplicative_expression ADD . expression

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 135
    multiplicative_expression  go to state 71
    term                       go to state 72
    var                        go to state 73


State 102

   45 multiplicative_expression: term MULT . multiplicative_expression

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    multiplicative_expression  go to state 136
    term                       go to state 72
    var                        go to state 73


State 103

   46 multiplicative_expression: term DIV . multiplicative_expression

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    multiplicative_expression  go to state 137
    term                       go to state 72
    var                        go to state 73


State 104

   47 multiplicative_expression: term MOD . multiplicative_expression

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    multiplicative_expression  go to state 138
    term                       go to state 72
    var                        go to state 73


State 105

   65 relation_exp: NOT TRUE .

    $default  reduce using rule 65 (relation_exp)


State 106

   67 relation_exp: NOT FALSE .

    $default  reduce using rule 67 (relation_exp)


State 107

   52 term: L_PAREN . expression R_PAREN
   69 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 74
    TRUE     shift, and go to state 75
    FALSE    shift, and go to state 76
    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 77
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 109
    multiplicative_expression  go to state 71
    term                       go to state 72
    bool_exp                   go to state 139
    relation_and_exp           go to state 80
    relation_exp               go to state 81
    var                        go to state 73


State 108

   63 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 111
    NEQ  shift, and go to state 112
    LT   shift, and go to state 113
    GT   shift, and go to state 114
    LTE  shift, and go to state 115
    GTE  shift, and go to state 116

    comp  go to state 140


State 109

   52 term: L_PAREN expression . R_PAREN
   62 relation_exp: expression . comp expression

    EQ       shift, and go to state 111
    NEQ      shift, and go to state 112
    LT       shift, and go to state 113
    GT       shift, and go to state 114
    LTE      shift, and go to state 115
    GTE      shift, and go to state 116
    R_PAREN  shift, and go to state 131

    comp  go to state 117


State 110

   59 bool_exp: bool_exp . OR relation_and_exp
   68 relation_exp: L_PAREN bool_exp . R_PAREN

    OR       shift, and go to state 119
    R_PAREN  shift, and go to state 141


State 111

   70 comp: EQ .

    $default  reduce using rule 70 (comp)


State 112

   71 comp: NEQ .

    $default  reduce using rule 71 (comp)


State 113

   72 comp: LT .

    $default  reduce using rule 72 (comp)


State 114

   73 comp: GT .

    $default  reduce using rule 73 (comp)


State 115

   74 comp: LTE .

    $default  reduce using rule 74 (comp)


State 116

   75 comp: GTE .

    $default  reduce using rule 75 (comp)


State 117

   62 relation_exp: expression comp . expression

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 142
    multiplicative_expression  go to state 71
    term                       go to state 72
    var                        go to state 73


State 118

   25 statement: IF bool_exp THEN . statements ENDIF
   26          | IF bool_exp THEN . statements ELSE statements ENDIF

    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    IDENT     shift, and go to state 6

    ident       go to state 59
    statement   go to state 60
    statements  go to state 143
    var         go to state 62


State 119

   59 bool_exp: bool_exp OR . relation_and_exp

    NOT      shift, and go to state 74
    TRUE     shift, and go to state 75
    FALSE    shift, and go to state 76
    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 77
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 78
    multiplicative_expression  go to state 71
    term                       go to state 72
    relation_and_exp           go to state 144
    relation_exp               go to state 81
    var                        go to state 73


State 120

   61 relation_and_exp: relation_and_exp AND . relation_exp

    NOT      shift, and go to state 74
    TRUE     shift, and go to state 75
    FALSE    shift, and go to state 76
    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 77
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 78
    multiplicative_expression  go to state 71
    term                       go to state 72
    relation_exp               go to state 145
    var                        go to state 73


State 121

   27 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    IDENT     shift, and go to state 6

    ident       go to state 59
    statement   go to state 60
    statements  go to state 146
    var         go to state 62


State 122

   28 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 147


State 123

   30 statement: READ var COMMA . var
   31          | READ var COMMA . var COMMA var
   79 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 59
    var    go to state 148
    vars   go to state 149


State 124

   33 statement: WRITE var COMMA . var
   34          | WRITE var COMMA . var COMMA var
   79 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 59
    var    go to state 150
    vars   go to state 149


State 125

   77 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 151


State 126

   40 statements: statement SEMICOLON statements .

    $default  reduce using rule 40 (statements)


State 127

   24 statement: var ASSIGN expression .

    $default  reduce using rule 24 (statement)


State 128

   20 declaration: IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 20 (declaration)


State 129

   21 declaration: IDENT COMMA IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 152


State 130

   53 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 153


State 131

   52 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 52 (term)


State 132

   56 expressions: expression .

    $default  reduce using rule 56 (expressions)


State 133

   54 term: ident L_PAREN expressions . R_PAREN
   57 expressions: expressions . COMMA expression

    COMMA    shift, and go to state 154
    R_PAREN  shift, and go to state 155


State 134

   43 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 43 (expression)


State 135

   42 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 42 (expression)


State 136

   45 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 45 (multiplicative_expression)


State 137

   46 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 46 (multiplicative_expression)


State 138

   47 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 47 (multiplicative_expression)


State 139

   59 bool_exp: bool_exp . OR relation_and_exp
   69 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    OR       shift, and go to state 119
    R_PAREN  shift, and go to state 156


State 140

   63 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 157
    multiplicative_expression  go to state 71
    term                       go to state 72
    var                        go to state 73


State 141

   68 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 68 (relation_exp)


State 142

   62 relation_exp: expression comp expression .

    $default  reduce using rule 62 (relation_exp)


State 143

   25 statement: IF bool_exp THEN statements . ENDIF
   26          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 158
    ELSE   shift, and go to state 159


State 144

   59 bool_exp: bool_exp OR relation_and_exp .
   61 relation_and_exp: relation_and_exp . AND relation_exp

    AND  shift, and go to state 120

    $default  reduce using rule 59 (bool_exp)


State 145

   61 relation_and_exp: relation_and_exp AND relation_exp .

    $default  reduce using rule 61 (relation_and_exp)


State 146

   27 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 160


State 147

   28 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 161


State 148

   30 statement: READ var COMMA var .
   31          | READ var COMMA var . COMMA var
   78 vars: var .
   79     | var . COMMA vars

    COMMA  shift, and go to state 162

    SEMICOLON  reduce using rule 30 (statement)
    SEMICOLON  [reduce using rule 78 (vars)]
    $default   reduce using rule 30 (statement)


State 149

   79 vars: var COMMA vars .

    $default  reduce using rule 79 (vars)


State 150

   33 statement: WRITE var COMMA var .
   34          | WRITE var COMMA var . COMMA var
   78 vars: var .
   79     | var . COMMA vars

    COMMA  shift, and go to state 163

    SEMICOLON  reduce using rule 33 (statement)
    SEMICOLON  [reduce using rule 78 (vars)]
    $default   reduce using rule 33 (statement)


State 151

   77 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 77 (var)


State 152

   21 declaration: IDENT COMMA IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 164


State 153

   53 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 53 (term)


State 154

   57 expressions: expressions COMMA . expression

    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 67
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 165
    multiplicative_expression  go to state 71
    term                       go to state 72
    var                        go to state 73


State 155

   54 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 54 (term)


State 156

   69 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 69 (relation_exp)


State 157

   63 relation_exp: NOT expression comp expression .

    $default  reduce using rule 63 (relation_exp)


State 158

   25 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 25 (statement)


State 159

   26 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    RETURN    shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    DO        shift, and go to state 55
    CONTINUE  shift, and go to state 56
    READ      shift, and go to state 57
    WRITE     shift, and go to state 58
    IDENT     shift, and go to state 6

    ident       go to state 59
    statement   go to state 60
    statements  go to state 166
    var         go to state 62


State 160

   27 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 27 (statement)


State 161

   28 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 74
    TRUE     shift, and go to state 75
    FALSE    shift, and go to state 76
    SUB      shift, and go to state 66
    L_PAREN  shift, and go to state 77
    NUMBER   shift, and go to state 68
    IDENT    shift, and go to state 6

    ident                      go to state 69
    expression                 go to state 78
    multiplicative_expression  go to state 71
    term                       go to state 72
    bool_exp                   go to state 167
    relation_and_exp           go to state 80
    relation_exp               go to state 81
    var                        go to state 73


State 162

   31 statement: READ var COMMA var COMMA . var
   79 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 59
    var    go to state 168
    vars   go to state 149


State 163

   34 statement: WRITE var COMMA var COMMA . var
   79 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 59
    var    go to state 169
    vars   go to state 149


State 164

   21 declaration: IDENT COMMA IDENT COMMA IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 21 (declaration)


State 165

   57 expressions: expressions COMMA expression .

    $default  reduce using rule 57 (expressions)


State 166

   26 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 170


State 167

   28 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .
   59 bool_exp: bool_exp . OR relation_and_exp

    OR  shift, and go to state 119

    $default  reduce using rule 28 (statement)


State 168

   31 statement: READ var COMMA var COMMA var .
   78 vars: var .
   79     | var . COMMA vars

    COMMA  shift, and go to state 171

    SEMICOLON  reduce using rule 31 (statement)
    SEMICOLON  [reduce using rule 78 (vars)]
    $default   reduce using rule 31 (statement)


State 169

   34 statement: WRITE var COMMA var COMMA var .
   78 vars: var .
   79     | var . COMMA vars

    COMMA  shift, and go to state 171

    SEMICOLON  reduce using rule 34 (statement)
    SEMICOLON  [reduce using rule 78 (vars)]
    $default   reduce using rule 34 (statement)


State 170

   26 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 26 (statement)


State 171

   79 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 59
    var    go to state 172
    vars   go to state 149


State 172

   78 vars: var .
   79     | var . COMMA vars

    COMMA  shift, and go to state 171

    $default  reduce using rule 78 (vars)
