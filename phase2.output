Terminals unused in grammar

    MAIN


State 12 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    5 end_body: END_BODY

    6 function_ident: FUNCTION ident

    7 ident: IDENT

    8 declarations: %empty
    9             | declaration SEMICOLON declarations

   10 declaration: IDENT COLON INTEGER
   11            | idents COLON INTEGER
   12            | IDENT COMMA IDENT COLON INTEGER
   13            | IDENT COMMA IDENT COMMA IDENT COLON INTEGER
   14            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   15 idents: %empty
   16       | ident COMMA idents

   17 statement: var ASSIGN expression
   18          | IF bool_exp THEN statements ENDIF
   19          | IF bool_exp THEN statements ELSE statements ENDIF
   20          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   21          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   22          | READ vars
   23          | WRITE vars
   24          | CONTINUE
   25          | RETURN expression

   26 statements: statement SEMICOLON
   27           | statement SEMICOLON statements

   28 expression: multiplicative_expression
   29           | multiplicative_expression ADD expression
   30           | multiplicative_expression SUB expression

   31 multiplicative_expression: term
   32                          | term MULT multiplicative_expression
   33                          | term DIV multiplicative_expression
   34                          | term MOD multiplicative_expression

   35 term: var
   36     | SUB var
   37     | NUMBER
   38     | SUB NUMBER
   39     | L_PAREN expression R_PAREN
   40     | SUB L_PAREN expression R_PAREN
   41     | ident L_PAREN expressions R_PAREN

   42 expressions: %empty
   43            | comma_sep_expressions

   44 comma_sep_expressions: expression
   45                      | expression COMMA comma_sep_expressions

   46 bool_exp: relation_and_exp
   47         | relation_and_exp OR bool_exp

   48 relation_and_exp: relation_exp
   49                 | relation_exp AND relation_and_exp

   50 relation_exp: expression comp expression
   51             | NOT expression comp expression
   52             | TRUE
   53             | NOT TRUE
   54             | FALSE
   55             | NOT FALSE
   56             | L_PAREN bool_exp R_PAREN
   57             | NOT L_PAREN bool_exp R_PAREN

   58 comp: EQ
   59     | NEQ
   60     | LT
   61     | GT
   62     | LTE
   63     | GTE

   64 var: ident
   65    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   66 vars: var
   67     | var COMMA vars


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    BEGIN_PARAMS (258) 4
    END_PARAMS (259) 4
    BEGIN_LOCALS (260) 4
    END_LOCALS (261) 4
    BEGIN_BODY (262) 4
    END_BODY (263) 5
    FUNCTION (264) 6
    RETURN (265) 25
    MAIN (266)
    L_SQUARE_BRACKET (267) 14 65
    R_SQUARE_BRACKET (268) 14 65
    INTEGER (269) 10 11 12 13 14
    ARRAY (270) 14
    OF (271) 14
    IF (272) 18 19
    THEN (273) 18 19
    ENDIF (274) 18 19
    ELSE (275) 19
    WHILE (276) 20 21
    DO (277) 21
    BEGINLOOP (278) 20 21
    ENDLOOP (279) 20 21
    CONTINUE (280) 24
    READ (281) 22
    WRITE (282) 23
    AND (283) 49
    OR (284) 47
    NOT (285) 51 53 55 57
    TRUE (286) 52 53
    FALSE (287) 54 55
    SUB (288) 30 36 38 40
    ADD (289) 29
    MULT (290) 32
    DIV (291) 33
    MOD (292) 34
    EQ (293) 58
    NEQ (294) 59
    LT (295) 60
    GT (296) 61
    LTE (297) 62
    GTE (298) 63
    SEMICOLON (299) 4 9 26 27
    COLON (300) 10 11 12 13 14
    COMMA (301) 12 13 16 45 67
    L_PAREN (302) 39 40 41 56 57
    R_PAREN (303) 39 40 41 56 57
    ASSIGN (304) 17
    NUMBER <op_val> (305) 14 37 38
    IDENT <op_val> (306) 7 10 12 13 14


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    prog_start (53)
        on left: 1
        on right: 0
    functions <root> (54)
        on left: 2 3
        on right: 1 2
    function <root> (55)
        on left: 4
        on right: 2
    end_body <container> (56)
        on left: 5
        on right: 4
    function_ident <root> (57)
        on left: 6
        on right: 4
    ident <node> (58)
        on left: 7
        on right: 6 16 41 64 65
    declarations <node> (59)
        on left: 8 9
        on right: 4 9
    declaration <node> (60)
        on left: 10 11 12 13 14
        on right: 9
    idents <node> (61)
        on left: 15 16
        on right: 11 16
    statement <node> (62)
        on left: 17 18 19 20 21 22 23 24 25
        on right: 26 27
    statements <node> (63)
        on left: 26 27
        on right: 4 18 19 20 21 27
    expression <node> (64)
        on left: 28 29 30
        on right: 17 25 29 30 39 40 44 45 50 51 65
    multiplicative_expression <node> (65)
        on left: 31 32 33 34
        on right: 28 29 30 32 33 34
    term <node> (66)
        on left: 35 36 37 38 39 40 41
        on right: 31 32 33 34
    expressions <node> (67)
        on left: 42 43
        on right: 41
    comma_sep_expressions <node> (68)
        on left: 44 45
        on right: 43 45
    bool_exp (69)
        on left: 46 47
        on right: 18 19 20 21 47 56 57
    relation_and_exp (70)
        on left: 48 49
        on right: 46 47 49
    relation_exp (71)
        on left: 50 51 52 53 54 55 56 57
        on right: 48 49
    comp (72)
        on left: 58 59 60 61 62 63
        on right: 50 51
    var <node> (73)
        on left: 64 65
        on right: 17 35 36 66 67
    vars <node> (74)
        on left: 66 67
        on right: 22 23 67


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start      go to state 2
    functions       go to state 3
    function        go to state 4
    function_ident  go to state 5


State 1

    6 function_ident: FUNCTION . ident

    IDENT  shift, and go to state 6

    ident  go to state 7


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 8


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions       go to state 9
    function        go to state 4
    function_ident  go to state 5


State 5

    4 function: function_ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    SEMICOLON  shift, and go to state 10


State 6

    7 ident: IDENT .

    $default  reduce using rule 7 (ident)


State 7

    6 function_ident: FUNCTION ident .

    $default  reduce using rule 6 (function_ident)


State 8

    0 $accept: prog_start $end .

    $default  accept


State 9

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 10

    4 function: function_ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    BEGIN_PARAMS  shift, and go to state 11


State 11

    4 function: function_ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    IDENT  shift, and go to state 12

    COLON     reduce using rule 15 (idents)
    $default  reduce using rule 8 (declarations)

    ident         go to state 13
    declarations  go to state 14
    declaration   go to state 15
    idents        go to state 16


State 12

    7 ident: IDENT .
   10 declaration: IDENT . COLON INTEGER
   12            | IDENT . COMMA IDENT COLON INTEGER
   13            | IDENT . COMMA IDENT COMMA IDENT COLON INTEGER
   14            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18

    COMMA  [reduce using rule 7 (ident)]


State 13

   16 idents: ident . COMMA idents

    COMMA  shift, and go to state 19


State 14

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    END_PARAMS  shift, and go to state 20


State 15

    9 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 21


State 16

   11 declaration: idents . COLON INTEGER

    COLON  shift, and go to state 22


State 17

   10 declaration: IDENT COLON . INTEGER
   14            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 18

   12 declaration: IDENT COMMA . IDENT COLON INTEGER
   13            | IDENT COMMA . IDENT COMMA IDENT COLON INTEGER

    IDENT  shift, and go to state 25


State 19

   16 idents: ident COMMA . idents

    IDENT  shift, and go to state 6

    $default  reduce using rule 15 (idents)

    ident   go to state 13
    idents  go to state 26


State 20

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body

    BEGIN_LOCALS  shift, and go to state 27


State 21

    9 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    COLON     reduce using rule 15 (idents)
    $default  reduce using rule 8 (declarations)

    ident         go to state 13
    declarations  go to state 28
    declaration   go to state 15
    idents        go to state 16


State 22

   11 declaration: idents COLON . INTEGER

    INTEGER  shift, and go to state 29


State 23

   10 declaration: IDENT COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 24

   14 declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 30


State 25

   12 declaration: IDENT COMMA IDENT . COLON INTEGER
   13            | IDENT COMMA IDENT . COMMA IDENT COLON INTEGER

    COLON  shift, and go to state 31
    COMMA  shift, and go to state 32


State 26

   16 idents: ident COMMA idents .

    $default  reduce using rule 16 (idents)


State 27

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements end_body

    IDENT  shift, and go to state 12

    COLON     reduce using rule 15 (idents)
    $default  reduce using rule 8 (declarations)

    ident         go to state 13
    declarations  go to state 33
    declaration   go to state 15
    idents        go to state 16


State 28

    9 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 9 (declarations)


State 29

   11 declaration: idents COLON INTEGER .

    $default  reduce using rule 11 (declaration)


State 30

   14 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 34


State 31

   12 declaration: IDENT COMMA IDENT COLON . INTEGER

    INTEGER  shift, and go to state 35


State 32

   13 declaration: IDENT COMMA IDENT COMMA . IDENT COLON INTEGER

    IDENT  shift, and go to state 36


State 33

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements end_body

    END_LOCALS  shift, and go to state 37


State 34

   14 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 38


State 35

   12 declaration: IDENT COMMA IDENT COLON INTEGER .

    $default  reduce using rule 12 (declaration)


State 36

   13 declaration: IDENT COMMA IDENT COMMA IDENT . COLON INTEGER

    COLON  shift, and go to state 39


State 37

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements end_body

    BEGIN_BODY  shift, and go to state 40


State 38

   14 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 39

   13 declaration: IDENT COMMA IDENT COMMA IDENT COLON . INTEGER

    INTEGER  shift, and go to state 42


State 40

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements end_body

    RETURN    shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    CONTINUE  shift, and go to state 47
    READ      shift, and go to state 48
    WRITE     shift, and go to state 49
    IDENT     shift, and go to state 6

    ident       go to state 50
    statement   go to state 51
    statements  go to state 52
    var         go to state 53


State 41

   14 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 54


State 42

   13 declaration: IDENT COMMA IDENT COMMA IDENT COLON INTEGER .

    $default  reduce using rule 13 (declaration)


State 43

   25 statement: RETURN . expression

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 59
    multiplicative_expression  go to state 60
    term                       go to state 61
    var                        go to state 62


State 44

   18 statement: IF . bool_exp THEN statements ENDIF
   19          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 63
    TRUE     shift, and go to state 64
    FALSE    shift, and go to state 65
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 67
    multiplicative_expression  go to state 60
    term                       go to state 61
    bool_exp                   go to state 68
    relation_and_exp           go to state 69
    relation_exp               go to state 70
    var                        go to state 62


State 45

   20 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 63
    TRUE     shift, and go to state 64
    FALSE    shift, and go to state 65
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 67
    multiplicative_expression  go to state 60
    term                       go to state 61
    bool_exp                   go to state 71
    relation_and_exp           go to state 69
    relation_exp               go to state 70
    var                        go to state 62


State 46

   21 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 72


State 47

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


State 48

   22 statement: READ . vars

    IDENT  shift, and go to state 6

    ident  go to state 50
    var    go to state 73
    vars   go to state 74


State 49

   23 statement: WRITE . vars

    IDENT  shift, and go to state 6

    ident  go to state 50
    var    go to state 73
    vars   go to state 75


State 50

   64 var: ident .
   65    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 76

    $default  reduce using rule 64 (var)


State 51

   26 statements: statement . SEMICOLON
   27           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 77


State 52

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . end_body

    END_BODY  shift, and go to state 78

    end_body  go to state 79


State 53

   17 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 80


State 54

   14 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 14 (declaration)


State 55

   36 term: SUB . var
   38     | SUB . NUMBER
   40     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 81
    NUMBER   shift, and go to state 82
    IDENT    shift, and go to state 6

    ident  go to state 50
    var    go to state 83


State 56

   39 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 84
    multiplicative_expression  go to state 60
    term                       go to state 61
    var                        go to state 62


State 57

   37 term: NUMBER .

    $default  reduce using rule 37 (term)


State 58

   41 term: ident . L_PAREN expressions R_PAREN
   64 var: ident .
   65    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 76
    L_PAREN           shift, and go to state 85

    $default  reduce using rule 64 (var)


State 59

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


State 60

   28 expression: multiplicative_expression .
   29           | multiplicative_expression . ADD expression
   30           | multiplicative_expression . SUB expression

    SUB  shift, and go to state 86
    ADD  shift, and go to state 87

    $default  reduce using rule 28 (expression)


State 61

   31 multiplicative_expression: term .
   32                          | term . MULT multiplicative_expression
   33                          | term . DIV multiplicative_expression
   34                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 31 (multiplicative_expression)


State 62

   35 term: var .

    $default  reduce using rule 35 (term)


State 63

   51 relation_exp: NOT . expression comp expression
   53             | NOT . TRUE
   55             | NOT . FALSE
   57             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 91
    FALSE    shift, and go to state 92
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 93
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 94
    multiplicative_expression  go to state 60
    term                       go to state 61
    var                        go to state 62


State 64

   52 relation_exp: TRUE .

    $default  reduce using rule 52 (relation_exp)


State 65

   54 relation_exp: FALSE .

    $default  reduce using rule 54 (relation_exp)


State 66

   39 term: L_PAREN . expression R_PAREN
   56 relation_exp: L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 63
    TRUE     shift, and go to state 64
    FALSE    shift, and go to state 65
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 95
    multiplicative_expression  go to state 60
    term                       go to state 61
    bool_exp                   go to state 96
    relation_and_exp           go to state 69
    relation_exp               go to state 70
    var                        go to state 62


State 67

   50 relation_exp: expression . comp expression

    EQ   shift, and go to state 97
    NEQ  shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LTE  shift, and go to state 101
    GTE  shift, and go to state 102

    comp  go to state 103


State 68

   18 statement: IF bool_exp . THEN statements ENDIF
   19          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 104


State 69

   46 bool_exp: relation_and_exp .
   47         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 105

    $default  reduce using rule 46 (bool_exp)


State 70

   48 relation_and_exp: relation_exp .
   49                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 106

    $default  reduce using rule 48 (relation_and_exp)


State 71

   20 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 107


State 72

   21 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    RETURN    shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    CONTINUE  shift, and go to state 47
    READ      shift, and go to state 48
    WRITE     shift, and go to state 49
    IDENT     shift, and go to state 6

    ident       go to state 50
    statement   go to state 51
    statements  go to state 108
    var         go to state 53


State 73

   66 vars: var .
   67     | var . COMMA vars

    COMMA  shift, and go to state 109

    $default  reduce using rule 66 (vars)


State 74

   22 statement: READ vars .

    $default  reduce using rule 22 (statement)


State 75

   23 statement: WRITE vars .

    $default  reduce using rule 23 (statement)


State 76

   65 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 110
    multiplicative_expression  go to state 60
    term                       go to state 61
    var                        go to state 62


State 77

   26 statements: statement SEMICOLON .
   27           | statement SEMICOLON . statements

    RETURN    shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    CONTINUE  shift, and go to state 47
    READ      shift, and go to state 48
    WRITE     shift, and go to state 49
    IDENT     shift, and go to state 6

    $default  reduce using rule 26 (statements)

    ident       go to state 50
    statement   go to state 51
    statements  go to state 111
    var         go to state 53


State 78

    5 end_body: END_BODY .

    $default  reduce using rule 5 (end_body)


State 79

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements end_body .

    $default  reduce using rule 4 (function)


State 80

   17 statement: var ASSIGN . expression

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 112
    multiplicative_expression  go to state 60
    term                       go to state 61
    var                        go to state 62


State 81

   40 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 113
    multiplicative_expression  go to state 60
    term                       go to state 61
    var                        go to state 62


State 82

   38 term: SUB NUMBER .

    $default  reduce using rule 38 (term)


State 83

   36 term: SUB var .

    $default  reduce using rule 36 (term)


State 84

   39 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 114


State 85

   41 term: ident L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    $default  reduce using rule 42 (expressions)

    ident                      go to state 58
    expression                 go to state 115
    multiplicative_expression  go to state 60
    term                       go to state 61
    expressions                go to state 116
    comma_sep_expressions      go to state 117
    var                        go to state 62


State 86

   30 expression: multiplicative_expression SUB . expression

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 118
    multiplicative_expression  go to state 60
    term                       go to state 61
    var                        go to state 62


State 87

   29 expression: multiplicative_expression ADD . expression

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 119
    multiplicative_expression  go to state 60
    term                       go to state 61
    var                        go to state 62


State 88

   32 multiplicative_expression: term MULT . multiplicative_expression

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    multiplicative_expression  go to state 120
    term                       go to state 61
    var                        go to state 62


State 89

   33 multiplicative_expression: term DIV . multiplicative_expression

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    multiplicative_expression  go to state 121
    term                       go to state 61
    var                        go to state 62


State 90

   34 multiplicative_expression: term MOD . multiplicative_expression

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    multiplicative_expression  go to state 122
    term                       go to state 61
    var                        go to state 62


State 91

   53 relation_exp: NOT TRUE .

    $default  reduce using rule 53 (relation_exp)


State 92

   55 relation_exp: NOT FALSE .

    $default  reduce using rule 55 (relation_exp)


State 93

   39 term: L_PAREN . expression R_PAREN
   57 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 63
    TRUE     shift, and go to state 64
    FALSE    shift, and go to state 65
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 95
    multiplicative_expression  go to state 60
    term                       go to state 61
    bool_exp                   go to state 123
    relation_and_exp           go to state 69
    relation_exp               go to state 70
    var                        go to state 62


State 94

   51 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 97
    NEQ  shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LTE  shift, and go to state 101
    GTE  shift, and go to state 102

    comp  go to state 124


State 95

   39 term: L_PAREN expression . R_PAREN
   50 relation_exp: expression . comp expression

    EQ       shift, and go to state 97
    NEQ      shift, and go to state 98
    LT       shift, and go to state 99
    GT       shift, and go to state 100
    LTE      shift, and go to state 101
    GTE      shift, and go to state 102
    R_PAREN  shift, and go to state 114

    comp  go to state 103


State 96

   56 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 125


State 97

   58 comp: EQ .

    $default  reduce using rule 58 (comp)


State 98

   59 comp: NEQ .

    $default  reduce using rule 59 (comp)


State 99

   60 comp: LT .

    $default  reduce using rule 60 (comp)


State 100

   61 comp: GT .

    $default  reduce using rule 61 (comp)


State 101

   62 comp: LTE .

    $default  reduce using rule 62 (comp)


State 102

   63 comp: GTE .

    $default  reduce using rule 63 (comp)


State 103

   50 relation_exp: expression comp . expression

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 126
    multiplicative_expression  go to state 60
    term                       go to state 61
    var                        go to state 62


State 104

   18 statement: IF bool_exp THEN . statements ENDIF
   19          | IF bool_exp THEN . statements ELSE statements ENDIF

    RETURN    shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    CONTINUE  shift, and go to state 47
    READ      shift, and go to state 48
    WRITE     shift, and go to state 49
    IDENT     shift, and go to state 6

    ident       go to state 50
    statement   go to state 51
    statements  go to state 127
    var         go to state 53


State 105

   47 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 63
    TRUE     shift, and go to state 64
    FALSE    shift, and go to state 65
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 67
    multiplicative_expression  go to state 60
    term                       go to state 61
    bool_exp                   go to state 128
    relation_and_exp           go to state 69
    relation_exp               go to state 70
    var                        go to state 62


State 106

   49 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 63
    TRUE     shift, and go to state 64
    FALSE    shift, and go to state 65
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 67
    multiplicative_expression  go to state 60
    term                       go to state 61
    relation_and_exp           go to state 129
    relation_exp               go to state 70
    var                        go to state 62


State 107

   20 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    RETURN    shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    CONTINUE  shift, and go to state 47
    READ      shift, and go to state 48
    WRITE     shift, and go to state 49
    IDENT     shift, and go to state 6

    ident       go to state 50
    statement   go to state 51
    statements  go to state 130
    var         go to state 53


State 108

   21 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 131


State 109

   67 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 50
    var    go to state 73
    vars   go to state 132


State 110

   65 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 133


State 111

   27 statements: statement SEMICOLON statements .

    $default  reduce using rule 27 (statements)


State 112

   17 statement: var ASSIGN expression .

    $default  reduce using rule 17 (statement)


State 113

   40 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 134


State 114

   39 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 39 (term)


State 115

   44 comma_sep_expressions: expression .
   45                      | expression . COMMA comma_sep_expressions

    COMMA  shift, and go to state 135

    $default  reduce using rule 44 (comma_sep_expressions)


State 116

   41 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 136


State 117

   43 expressions: comma_sep_expressions .

    $default  reduce using rule 43 (expressions)


State 118

   30 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 30 (expression)


State 119

   29 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 29 (expression)


State 120

   32 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 32 (multiplicative_expression)


State 121

   33 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 33 (multiplicative_expression)


State 122

   34 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 34 (multiplicative_expression)


State 123

   57 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 137


State 124

   51 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 138
    multiplicative_expression  go to state 60
    term                       go to state 61
    var                        go to state 62


State 125

   56 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 56 (relation_exp)


State 126

   50 relation_exp: expression comp expression .

    $default  reduce using rule 50 (relation_exp)


State 127

   18 statement: IF bool_exp THEN statements . ENDIF
   19          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 139
    ELSE   shift, and go to state 140


State 128

   47 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 47 (bool_exp)


State 129

   49 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 49 (relation_and_exp)


State 130

   20 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 141


State 131

   21 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 142


State 132

   67 vars: var COMMA vars .

    $default  reduce using rule 67 (vars)


State 133

   65 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 65 (var)


State 134

   40 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 40 (term)


State 135

   45 comma_sep_expressions: expression COMMA . comma_sep_expressions

    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 56
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 115
    multiplicative_expression  go to state 60
    term                       go to state 61
    comma_sep_expressions      go to state 143
    var                        go to state 62


State 136

   41 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 41 (term)


State 137

   57 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 57 (relation_exp)


State 138

   51 relation_exp: NOT expression comp expression .

    $default  reduce using rule 51 (relation_exp)


State 139

   18 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 18 (statement)


State 140

   19 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    RETURN    shift, and go to state 43
    IF        shift, and go to state 44
    WHILE     shift, and go to state 45
    DO        shift, and go to state 46
    CONTINUE  shift, and go to state 47
    READ      shift, and go to state 48
    WRITE     shift, and go to state 49
    IDENT     shift, and go to state 6

    ident       go to state 50
    statement   go to state 51
    statements  go to state 144
    var         go to state 53


State 141

   20 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (statement)


State 142

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 63
    TRUE     shift, and go to state 64
    FALSE    shift, and go to state 65
    SUB      shift, and go to state 55
    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 57
    IDENT    shift, and go to state 6

    ident                      go to state 58
    expression                 go to state 67
    multiplicative_expression  go to state 60
    term                       go to state 61
    bool_exp                   go to state 145
    relation_and_exp           go to state 69
    relation_exp               go to state 70
    var                        go to state 62


State 143

   45 comma_sep_expressions: expression COMMA comma_sep_expressions .

    $default  reduce using rule 45 (comma_sep_expressions)


State 144

   19 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 146


State 145

   21 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 21 (statement)


State 146

   19 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 19 (statement)
